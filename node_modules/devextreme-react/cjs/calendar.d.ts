/*!
 * devextreme-react
 * Version: 23.2.5
 * Build date: Mon Mar 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

/// <reference types="react" />
import dxCalendar, { Properties } from "devextreme/ui/calendar";
import { Component as BaseComponent, IHtmlOptions } from "./core/component";
import type { DisposingEvent, InitializedEvent, ValueChangedEvent } from "devextreme/ui/calendar";
declare type ReplaceFieldTypes<TSource, TReplacement> = {
    [P in keyof TSource]: P extends keyof TReplacement ? TReplacement[P] : TSource[P];
};
declare type ICalendarOptionsNarrowedEvents = {
    onDisposing?: ((e: DisposingEvent) => void);
    onInitialized?: ((e: InitializedEvent) => void);
    onValueChanged?: ((e: ValueChangedEvent) => void);
};
declare type ICalendarOptions = React.PropsWithChildren<ReplaceFieldTypes<Properties, ICalendarOptionsNarrowedEvents> & IHtmlOptions & {
    cellRender?: (...params: any) => React.ReactNode;
    cellComponent?: React.ComponentType<any>;
    cellKeyFn?: (data: any) => string;
    defaultValue?: Array<Date | number | string> | Date | number | string;
    defaultZoomLevel?: "century" | "decade" | "month" | "year";
    onValueChange?: (value: Array<Date | number | string> | Date | number | string) => void;
    onZoomLevelChange?: (value: "century" | "decade" | "month" | "year") => void;
}>;
declare class Calendar extends BaseComponent<React.PropsWithChildren<ICalendarOptions>> {
    get instance(): dxCalendar;
    protected _WidgetClass: typeof dxCalendar;
    protected subscribableOptions: string[];
    protected independentEvents: string[];
    protected _defaults: {
        defaultValue: string;
        defaultZoomLevel: string;
    };
    protected _templateProps: {
        tmplOption: string;
        render: string;
        component: string;
        keyFn: string;
    }[];
}
export default Calendar;
export { Calendar, ICalendarOptions };
import type * as CalendarTypes from 'devextreme/ui/calendar_types';
export { CalendarTypes };
