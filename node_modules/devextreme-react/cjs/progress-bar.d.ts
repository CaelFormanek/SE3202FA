/*!
 * devextreme-react
 * Version: 23.2.5
 * Build date: Mon Mar 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

/// <reference types="react" />
import dxProgressBar, { Properties } from "devextreme/ui/progress_bar";
import { Component as BaseComponent, IHtmlOptions } from "./core/component";
import type { CompleteEvent, ContentReadyEvent, DisposingEvent, InitializedEvent, ValueChangedEvent } from "devextreme/ui/progress_bar";
declare type ReplaceFieldTypes<TSource, TReplacement> = {
    [P in keyof TSource]: P extends keyof TReplacement ? TReplacement[P] : TSource[P];
};
declare type IProgressBarOptionsNarrowedEvents = {
    onComplete?: ((e: CompleteEvent) => void);
    onContentReady?: ((e: ContentReadyEvent) => void);
    onDisposing?: ((e: DisposingEvent) => void);
    onInitialized?: ((e: InitializedEvent) => void);
    onValueChanged?: ((e: ValueChangedEvent) => void);
};
declare type IProgressBarOptions = React.PropsWithChildren<ReplaceFieldTypes<Properties, IProgressBarOptionsNarrowedEvents> & IHtmlOptions & {
    defaultValue?: false | number;
    onValueChange?: (value: false | number) => void;
}>;
declare class ProgressBar extends BaseComponent<React.PropsWithChildren<IProgressBarOptions>> {
    get instance(): dxProgressBar;
    protected _WidgetClass: typeof dxProgressBar;
    protected subscribableOptions: string[];
    protected independentEvents: string[];
    protected _defaults: {
        defaultValue: string;
    };
}
export default ProgressBar;
export { ProgressBar, IProgressBarOptions };
import type * as ProgressBarTypes from 'devextreme/ui/progress_bar_types';
export { ProgressBarTypes };
