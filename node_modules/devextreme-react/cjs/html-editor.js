/*!
 * devextreme-react
 * Version: 23.2.5
 * Build date: Mon Mar 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

"use client";
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Variables = exports.ToolbarItem = exports.Toolbar = exports.TableResizing = exports.TableContextMenuItem = exports.TableContextMenu = exports.Tab = exports.Mention = exports.MediaResizing = exports.Item = exports.ImageUpload = exports.FileUploaderOptions = exports.HtmlEditor = void 0;
var html_editor_1 = __importDefault(require("devextreme/ui/html_editor"));
var PropTypes = __importStar(require("prop-types"));
var component_1 = require("./core/component");
var nested_option_1 = __importDefault(require("./core/nested-option"));
var HtmlEditor = /** @class */ (function (_super) {
    __extends(HtmlEditor, _super);
    function HtmlEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._WidgetClass = html_editor_1.default;
        _this.subscribableOptions = ["value"];
        _this.independentEvents = ["onContentReady", "onDisposing", "onFocusIn", "onFocusOut", "onInitialized", "onValueChanged"];
        _this._defaults = {
            defaultValue: "value"
        };
        _this._expectedChildren = {
            imageUpload: { optionName: "imageUpload", isCollectionItem: false },
            mediaResizing: { optionName: "mediaResizing", isCollectionItem: false },
            mention: { optionName: "mentions", isCollectionItem: true },
            tableContextMenu: { optionName: "tableContextMenu", isCollectionItem: false },
            tableResizing: { optionName: "tableResizing", isCollectionItem: false },
            toolbar: { optionName: "toolbar", isCollectionItem: false },
            variables: { optionName: "variables", isCollectionItem: false }
        };
        return _this;
    }
    Object.defineProperty(HtmlEditor.prototype, "instance", {
        get: function () {
            return this._instance;
        },
        enumerable: false,
        configurable: true
    });
    return HtmlEditor;
}(component_1.Component));
exports.HtmlEditor = HtmlEditor;
HtmlEditor.propTypes = {
    accessKey: PropTypes.string,
    activeStateEnabled: PropTypes.bool,
    allowSoftLineBreak: PropTypes.bool,
    customizeModules: PropTypes.func,
    disabled: PropTypes.bool,
    elementAttr: PropTypes.object,
    focusStateEnabled: PropTypes.bool,
    height: PropTypes.oneOfType([
        PropTypes.func,
        PropTypes.number,
        PropTypes.string
    ]),
    hint: PropTypes.string,
    hoverStateEnabled: PropTypes.bool,
    imageUpload: PropTypes.object,
    isDirty: PropTypes.bool,
    isValid: PropTypes.bool,
    mediaResizing: PropTypes.object,
    mentions: PropTypes.array,
    name: PropTypes.string,
    onContentReady: PropTypes.func,
    onDisposing: PropTypes.func,
    onFocusIn: PropTypes.func,
    onFocusOut: PropTypes.func,
    onInitialized: PropTypes.func,
    onOptionChanged: PropTypes.func,
    onValueChanged: PropTypes.func,
    placeholder: PropTypes.string,
    readOnly: PropTypes.bool,
    rtlEnabled: PropTypes.bool,
    stylingMode: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.oneOf([
            "outlined",
            "underlined",
            "filled"
        ])
    ]),
    tabIndex: PropTypes.number,
    tableContextMenu: PropTypes.object,
    tableResizing: PropTypes.object,
    toolbar: PropTypes.object,
    validationErrors: PropTypes.array,
    validationMessageMode: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.oneOf([
            "always",
            "auto"
        ])
    ]),
    validationMessagePosition: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.oneOf([
            "bottom",
            "left",
            "right",
            "top"
        ])
    ]),
    validationStatus: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.oneOf([
            "valid",
            "invalid",
            "pending"
        ])
    ]),
    valueType: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.oneOf([
            "html",
            "markdown"
        ])
    ]),
    variables: PropTypes.object,
    visible: PropTypes.bool,
    width: PropTypes.oneOfType([
        PropTypes.func,
        PropTypes.number,
        PropTypes.string
    ])
};
var FileUploaderOptions = /** @class */ (function (_super) {
    __extends(FileUploaderOptions, _super);
    function FileUploaderOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FileUploaderOptions.OptionName = "fileUploaderOptions";
    FileUploaderOptions.DefaultsProps = {
        defaultValue: "value"
    };
    return FileUploaderOptions;
}(nested_option_1.default));
exports.FileUploaderOptions = FileUploaderOptions;
var ImageUpload = /** @class */ (function (_super) {
    __extends(ImageUpload, _super);
    function ImageUpload() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ImageUpload.OptionName = "imageUpload";
    ImageUpload.ExpectedChildren = {
        fileUploaderOptions: { optionName: "fileUploaderOptions", isCollectionItem: false },
        tab: { optionName: "tabs", isCollectionItem: true }
    };
    return ImageUpload;
}(nested_option_1.default));
exports.ImageUpload = ImageUpload;
var Item = /** @class */ (function (_super) {
    __extends(Item, _super);
    function Item() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Item.OptionName = "items";
    Item.IsCollectionItem = true;
    Item.TemplateProps = [{
            tmplOption: "template",
            render: "render",
            component: "component",
            keyFn: "keyFn"
        }, {
            tmplOption: "menuItemTemplate",
            render: "menuItemRender",
            component: "menuItemComponent",
            keyFn: "menuItemKeyFn"
        }];
    return Item;
}(nested_option_1.default));
exports.Item = Item;
var MediaResizing = /** @class */ (function (_super) {
    __extends(MediaResizing, _super);
    function MediaResizing() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MediaResizing.OptionName = "mediaResizing";
    return MediaResizing;
}(nested_option_1.default));
exports.MediaResizing = MediaResizing;
var Mention = /** @class */ (function (_super) {
    __extends(Mention, _super);
    function Mention() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Mention.OptionName = "mentions";
    Mention.IsCollectionItem = true;
    Mention.TemplateProps = [{
            tmplOption: "itemTemplate",
            render: "itemRender",
            component: "itemComponent",
            keyFn: "itemKeyFn"
        }, {
            tmplOption: "template",
            render: "render",
            component: "component",
            keyFn: "keyFn"
        }];
    return Mention;
}(nested_option_1.default));
exports.Mention = Mention;
var Tab = /** @class */ (function (_super) {
    __extends(Tab, _super);
    function Tab() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Tab.OptionName = "tabs";
    Tab.IsCollectionItem = true;
    return Tab;
}(nested_option_1.default));
exports.Tab = Tab;
var TableContextMenu = /** @class */ (function (_super) {
    __extends(TableContextMenu, _super);
    function TableContextMenu() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableContextMenu.OptionName = "tableContextMenu";
    TableContextMenu.ExpectedChildren = {
        item: { optionName: "items", isCollectionItem: true },
        tableContextMenuItem: { optionName: "items", isCollectionItem: true }
    };
    return TableContextMenu;
}(nested_option_1.default));
exports.TableContextMenu = TableContextMenu;
var TableContextMenuItem = /** @class */ (function (_super) {
    __extends(TableContextMenuItem, _super);
    function TableContextMenuItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableContextMenuItem.OptionName = "items";
    TableContextMenuItem.IsCollectionItem = true;
    TableContextMenuItem.TemplateProps = [{
            tmplOption: "template",
            render: "render",
            component: "component",
            keyFn: "keyFn"
        }];
    return TableContextMenuItem;
}(nested_option_1.default));
exports.TableContextMenuItem = TableContextMenuItem;
var TableResizing = /** @class */ (function (_super) {
    __extends(TableResizing, _super);
    function TableResizing() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableResizing.OptionName = "tableResizing";
    return TableResizing;
}(nested_option_1.default));
exports.TableResizing = TableResizing;
var Toolbar = /** @class */ (function (_super) {
    __extends(Toolbar, _super);
    function Toolbar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Toolbar.OptionName = "toolbar";
    Toolbar.ExpectedChildren = {
        item: { optionName: "items", isCollectionItem: true },
        toolbarItem: { optionName: "items", isCollectionItem: true }
    };
    return Toolbar;
}(nested_option_1.default));
exports.Toolbar = Toolbar;
var ToolbarItem = /** @class */ (function (_super) {
    __extends(ToolbarItem, _super);
    function ToolbarItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToolbarItem.OptionName = "items";
    ToolbarItem.IsCollectionItem = true;
    ToolbarItem.TemplateProps = [{
            tmplOption: "menuItemTemplate",
            render: "menuItemRender",
            component: "menuItemComponent",
            keyFn: "menuItemKeyFn"
        }, {
            tmplOption: "template",
            render: "render",
            component: "component",
            keyFn: "keyFn"
        }];
    return ToolbarItem;
}(nested_option_1.default));
exports.ToolbarItem = ToolbarItem;
var Variables = /** @class */ (function (_super) {
    __extends(Variables, _super);
    function Variables() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Variables.OptionName = "variables";
    return Variables;
}(nested_option_1.default));
exports.Variables = Variables;
exports.default = HtmlEditor;
