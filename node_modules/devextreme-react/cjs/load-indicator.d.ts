/*!
 * devextreme-react
 * Version: 23.2.5
 * Build date: Mon Mar 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

/// <reference types="react" />
import dxLoadIndicator, { Properties } from "devextreme/ui/load_indicator";
import { Component as BaseComponent, IHtmlOptions } from "./core/component";
import type { ContentReadyEvent, DisposingEvent, InitializedEvent } from "devextreme/ui/load_indicator";
declare type ReplaceFieldTypes<TSource, TReplacement> = {
    [P in keyof TSource]: P extends keyof TReplacement ? TReplacement[P] : TSource[P];
};
declare type ILoadIndicatorOptionsNarrowedEvents = {
    onContentReady?: ((e: ContentReadyEvent) => void);
    onDisposing?: ((e: DisposingEvent) => void);
    onInitialized?: ((e: InitializedEvent) => void);
};
declare type ILoadIndicatorOptions = React.PropsWithChildren<ReplaceFieldTypes<Properties, ILoadIndicatorOptionsNarrowedEvents> & IHtmlOptions>;
declare class LoadIndicator extends BaseComponent<React.PropsWithChildren<ILoadIndicatorOptions>> {
    get instance(): dxLoadIndicator;
    protected _WidgetClass: typeof dxLoadIndicator;
    protected independentEvents: string[];
}
export default LoadIndicator;
export { LoadIndicator, ILoadIndicatorOptions };
import type * as LoadIndicatorTypes from 'devextreme/ui/load_indicator_types';
export { LoadIndicatorTypes };
