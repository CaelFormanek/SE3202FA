/*!
 * devextreme-react
 * Version: 23.2.5
 * Build date: Mon Mar 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.separateProps = exports.getClassName = exports.elementPropNames = void 0;
var elementPropNames = ['style', 'id'];
exports.elementPropNames = elementPropNames;
var classNamePropName = 'className';
var refPropName = ['dropZone', 'dialogTrigger'];
function isIgnoredProp(name) {
    return name === 'children' || name === classNamePropName || elementPropNames.includes(name);
}
function separateProps(props, defaultsProps, templateProps) {
    templateProps = templateProps || [];
    var defaults = {};
    var options = {};
    var templates = {};
    var knownTemplates = {};
    templateProps.forEach(function (value) {
        knownTemplates[value.component] = true;
        knownTemplates[value.render] = true;
    });
    Object.keys(props).forEach(function (key) {
        var defaultOptionName = defaultsProps ? defaultsProps[key] : null;
        var value = props[key];
        if (isIgnoredProp(key)) {
            return;
        }
        if (defaultOptionName) {
            defaults[defaultOptionName] = value;
            return;
        }
        if (knownTemplates[key]) {
            templates[key] = value;
            return;
        }
        if (refPropName.includes(key)) {
            options[key] = value && value.current ? value.current : value;
            return;
        }
        options[key] = props[key];
    });
    return { options: options, defaults: defaults, templates: templates };
}
exports.separateProps = separateProps;
function getClassName(props) {
    return props[classNamePropName];
}
exports.getClassName = getClassName;
