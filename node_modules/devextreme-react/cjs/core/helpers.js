/*!
 * devextreme-react
 * Version: 23.2.5
 * Build date: Mon Mar 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.capitalizeFirstLetter = exports.TemplateInstantiationModels = exports.DoubleKeyMap = exports.generateID = exports.RemovalLockerContext = void 0;
/* eslint-disable max-classes-per-file, no-restricted-syntax */
var react_1 = require("react");
exports.RemovalLockerContext = react_1.createContext({
    lock: function () { return undefined; },
    unlock: function () { return undefined; },
});
function generateID() {
    return Math.random().toString(36).substring(2);
}
exports.generateID = generateID;
var DoubleKeyMap = /** @class */ (function () {
    function DoubleKeyMap() {
        this._map = new Map();
    }
    DoubleKeyMap.prototype.set = function (_a, value) {
        var key1 = _a.key1, key2 = _a.key2;
        var innerMap = this._map.get(key1);
        if (!innerMap) {
            innerMap = new Map();
            this._map.set(key1, innerMap);
        }
        innerMap.set(key2, value);
    };
    DoubleKeyMap.prototype.get = function (_a) {
        var key1 = _a.key1, key2 = _a.key2;
        var innerMap = this._map.get(key1);
        return innerMap ? innerMap.get(key2) : undefined;
    };
    DoubleKeyMap.prototype.delete = function (_a) {
        var key1 = _a.key1, key2 = _a.key2;
        var innerMap = this._map.get(key1);
        if (!innerMap) {
            return;
        }
        innerMap.delete(key2);
        if (innerMap.size === 0) {
            this._map.delete(key1);
        }
    };
    Object.defineProperty(DoubleKeyMap.prototype, "empty", {
        get: function () {
            return this._map.size === 0;
        },
        enumerable: false,
        configurable: true
    });
    DoubleKeyMap.prototype.shallowCopy = function () {
        var copy = new DoubleKeyMap();
        copy._map = this._map;
        return copy;
    };
    DoubleKeyMap.prototype[Symbol.iterator] = function () {
        var _a, _b, _c, key1, innerMap, innerMap_1, innerMap_1_1, _d, key2, value, e_1_1, e_2_1;
        var e_2, _e, e_1, _f;
        return __generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    _g.trys.push([0, 11, 12, 13]);
                    _a = __values(this._map), _b = _a.next();
                    _g.label = 1;
                case 1:
                    if (!!_b.done) return [3 /*break*/, 10];
                    _c = __read(_b.value, 2), key1 = _c[0], innerMap = _c[1];
                    _g.label = 2;
                case 2:
                    _g.trys.push([2, 7, 8, 9]);
                    innerMap_1 = (e_1 = void 0, __values(innerMap)), innerMap_1_1 = innerMap_1.next();
                    _g.label = 3;
                case 3:
                    if (!!innerMap_1_1.done) return [3 /*break*/, 6];
                    _d = __read(innerMap_1_1.value, 2), key2 = _d[0], value = _d[1];
                    return [4 /*yield*/, [{ key1: key1, key2: key2 }, value]];
                case 4:
                    _g.sent();
                    _g.label = 5;
                case 5:
                    innerMap_1_1 = innerMap_1.next();
                    return [3 /*break*/, 3];
                case 6: return [3 /*break*/, 9];
                case 7:
                    e_1_1 = _g.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 9];
                case 8:
                    try {
                        if (innerMap_1_1 && !innerMap_1_1.done && (_f = innerMap_1.return)) _f.call(innerMap_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 9:
                    _b = _a.next();
                    return [3 /*break*/, 1];
                case 10: return [3 /*break*/, 13];
                case 11:
                    e_2_1 = _g.sent();
                    e_2 = { error: e_2_1 };
                    return [3 /*break*/, 13];
                case 12:
                    try {
                        if (_b && !_b.done && (_e = _a.return)) _e.call(_a);
                    }
                    finally { if (e_2) throw e_2.error; }
                    return [7 /*endfinally*/];
                case 13: return [2 /*return*/];
            }
        });
    };
    return DoubleKeyMap;
}());
exports.DoubleKeyMap = DoubleKeyMap;
var TemplateInstantiationModels = /** @class */ (function (_super) {
    __extends(TemplateInstantiationModels, _super);
    function TemplateInstantiationModels() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TemplateInstantiationModels;
}(DoubleKeyMap));
exports.TemplateInstantiationModels = TemplateInstantiationModels;
function capitalizeFirstLetter(text) {
    if (text.length) {
        return "" + text[0].toUpperCase() + text.substr(1);
    }
    return '';
}
exports.capitalizeFirstLetter = capitalizeFirstLetter;
