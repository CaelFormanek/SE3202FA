/*!
 * devextreme-react
 * Version: 23.2.5
 * Build date: Mon Mar 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TemplateManager = void 0;
var React = __importStar(require("react"));
var events = __importStar(require("devextreme/events"));
var react_1 = require("react");
var template_wrapper_1 = require("./template-wrapper");
var helpers_1 = require("./helpers");
var component_base_1 = require("./component-base");
var config_1 = require("./config");
function normalizeProps(props) {
    if (config_1.getOption('useLegacyTemplateEngine')) {
        var model = props.data;
        if (model && Object.prototype.hasOwnProperty.call(model, 'key')) {
            model.dxkey = model.key;
        }
        return model;
    }
    return props;
}
var TemplateManager = function (_a) {
    var init = _a.init;
    var _b = __read(react_1.useState(new helpers_1.TemplateInstantiationModels()), 2), instantiationModels = _b[0], setInstantiationModels = _b[1];
    var _c = __read(react_1.useState(), 2), updateContext = _c[0], setUpdateContext = _c[1];
    var widgetId = react_1.useRef('');
    var templateFactories = react_1.useRef({});
    var subscribeOnRemoval = react_1.useCallback(function (container, onRemoved) {
        if (container.nodeType === Node.ELEMENT_NODE) {
            events.on(container, component_base_1.DX_REMOVE_EVENT, onRemoved);
        }
    }, []);
    var unsubscribeOnRemoval = react_1.useCallback(function (container, onRemoved) {
        if (container.nodeType === Node.ELEMENT_NODE) {
            events.off(container, component_base_1.DX_REMOVE_EVENT, onRemoved);
        }
    }, []);
    var unwrapElement = react_1.useCallback(function (element) { return (element.get ? element.get(0) : element); }, []);
    var createMapKey = react_1.useCallback(function (key1, key2) { return ({ key1: key1, key2: key2 }); }, []);
    var getRandomId = react_1.useCallback(function () { return "" + helpers_1.generateID() + helpers_1.generateID() + helpers_1.generateID(); }, []);
    var getRenderFunc = react_1.useCallback(function (templateKey) { return function (_a) {
        var data = _a.model, index = _a.index, container = _a.container, onRendered = _a.onRendered;
        var containerElement = unwrapElement(container);
        var key = createMapKey(data, containerElement);
        var onRemoved = function () {
            setInstantiationModels(function (currentInstantiationModels) {
                var template = currentInstantiationModels.get(key);
                if (template) {
                    currentInstantiationModels.delete(key);
                    return currentInstantiationModels.shallowCopy();
                }
                return currentInstantiationModels;
            });
        };
        var hostWidgetId = widgetId.current;
        setInstantiationModels(function (currentInstantiationModels) {
            currentInstantiationModels.set(key, {
                templateKey: templateKey,
                index: index,
                componentKey: getRandomId(),
                onRendered: function () {
                    unsubscribeOnRemoval(containerElement, onRemoved);
                    if (hostWidgetId === widgetId.current) {
                        onRendered === null || onRendered === void 0 ? void 0 : onRendered();
                    }
                },
                onRemoved: onRemoved,
            });
            return currentInstantiationModels.shallowCopy();
        });
        return containerElement;
    }; }, [unsubscribeOnRemoval, createMapKey]);
    react_1.useMemo(function () {
        function getTemplateFunction(template) {
            switch (template.type) {
                case 'children': return function () { return template.content; };
                case 'render': return function (props) {
                    normalizeProps(props);
                    return template.content(props.data, props.index);
                };
                case 'component': return function (props) {
                    props = normalizeProps(props);
                    return React.createElement.bind(null, template.content)(props);
                };
                default: return function () { return React.createElement(React.Fragment); };
            }
        }
        function createDXTemplates(templateOptions) {
            var factories = Object.entries(templateOptions)
                .reduce(function (res, _a) {
                var _b;
                var _c = __read(_a, 2), key = _c[0], template = _c[1];
                return (__assign(__assign({}, res), (_b = {}, _b[key] = getTemplateFunction(template), _b)));
            }, {});
            templateFactories.current = factories;
            var dxTemplates = Object.keys(factories)
                .reduce(function (templates, templateKey) {
                templates[templateKey] = { render: getRenderFunc(templateKey) };
                return templates;
            }, {});
            return dxTemplates;
        }
        function clearInstantiationModels() {
            widgetId.current = getRandomId();
            setInstantiationModels(new helpers_1.TemplateInstantiationModels());
        }
        function updateTemplates(onUpdated) {
            setUpdateContext({ onUpdated: onUpdated });
        }
        init({ createDXTemplates: createDXTemplates, clearInstantiationModels: clearInstantiationModels, updateTemplates: updateTemplates });
    }, [init, getRenderFunc]);
    react_1.useEffect(function () {
        if (updateContext) {
            updateContext.onUpdated();
        }
    }, [updateContext]);
    if (instantiationModels.empty) {
        return null;
    }
    return (React.createElement(React.Fragment, null, Array.from(instantiationModels).map(function (_a) {
        var _b = __read(_a, 2), _c = _b[0], data = _c.key1, container = _c.key2, _d = _b[1], index = _d.index, templateKey = _d.templateKey, componentKey = _d.componentKey, onRendered = _d.onRendered, onRemoved = _d.onRemoved;
        subscribeOnRemoval(container, onRemoved);
        var factory = templateFactories.current[templateKey];
        if (factory) {
            return React.createElement(template_wrapper_1.TemplateWrapper, { key: componentKey, templateFactory: factory, data: data, index: index, container: container, onRemoved: onRemoved, onRendered: onRendered });
        }
        return null;
    })));
};
exports.TemplateManager = TemplateManager;
